We need working chat application with persistence (messages are saved to DB and presented after login).
You may use this tutorial (https://channels.readthedocs.io/en/latest/) as a starting point but persistence needs to be added.

List of requirements:
- Integration with existing Django project https://github.com/soma115/wikikracja. Please have in mind that curently implemented persistance is not corect and needs to be modify probably from scratch. The problem is that all messages are loaded as a whole each time chat is reloaded. In this setup creating notifications (about new message) is not possible.
- Everybody should be able to add public room with custom name. Max 5 rooms per user - limit set in settings_custom.py. Partially implemented.
- Users should be able to send message anonymously to public rooms.
- 1 to 1 messages. List of users as a tails rows x columns. If user is present - tail changes color. Partially implemented.
- Vote up, vote down in chat for each message. Those votes are anonymous. 
- Consequent messages from one user are squashed in to one message. Spaces instead of new line.
- Desktop notifications (sound in browser, changed favicon and more if possible) and in app notifications (on menu bar).
- If there are new messages - system sends email at the end of day. From public chanels email is send to everybody. From private channels email is send only to involved users.
- Inactive rooms are archived - it is already implemented and should be kept.
- Look and feel can be similar to Slack
- Slowmode

Chat will not be heavily utilized so scalability is not required but simplicity and clean code is. That's because chat will be developed much further in the future. Code should be over-commented.

Python, Django, Django Channels2 and JavaScript is required for this job.

We are using:
Server Centos 8
Python 3.6.8
Django 3.0.7